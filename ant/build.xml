<project name="TradeManager" default="all" basedir=".">
	<property file="build.properties" />
	<property name="base" location=".." />
	<property environment="env" />
	<property name="component.base" location=".." />
	<!-- Initialisation. -->
	<target name="initialise" description="Initialise required settings.">
		<tstamp />
		<property name="build" value="${component.base}/bin" />
		<property name="dist" value="${component.base}/dist" />
		<property name="srctrade" value="${component.base}/trade/src" />
		<property name="srccore" value="${component.base}/core/src" />
		<property name="config" value="${component.base}/config" />
		<property name="name" value="${dist}/${component.name.base}-${component.name.version}" />
		<!-- Edit the next line to link to the swt library you want, see README file in the swt folder -->
		<path id="build.classpath">
			<pathelement location="${build}" />
			<fileset dir="${component.base}/lib">
				<include name="jsyntaxpane-0.9.5-b29.jar" />
				<include name="tws-9.66.jar" />				
				<include name="jfreechart-1.0.14.jar" />
				<include name="jcommon-1.0.17.jar" />
				<include name="swt.jar" />
				<include name="c3p0-0.9.1.jar" />
				<include name="hibernate-c3p0-4.1.7.Final.jar" />
				<include name="javassist-3.15.0.GA.jar" />
				<include name="dom4j-1.6.1.jar" />
				<include name="hibernate-commons-annotations-4.0.1.Final.jar" />
				<include name="hibernate-core-4.1.7.Final.jar" />
				<include name="hibernate-entitymanager-4.1.7.Final.jar" />
				<include name="hibernate-jpa-2.0-api-1.0.1.Final.jar" />
				<include name="hibernate-validator-4.2.0.Final.jar" />
				<include name="ejb-api-3.0.jar" />
				<include name="antlr-2.7.7.jar" />
				<include name="mysql-connector-java-5.1.18.jar" />
				<include name="jboss-logging-3.1.0.GA.jar" />
				<include name="jboss-transaction-api_1.1_spec-1.0.0.Final.jar" />
				<include name="slf4j-api-1.6.1.jar" />
				<include name="slf4j-log4j12-1.6.1.jar" />
				<include name="log4j-1.2.16.jar" />
				<include name="commons-collections-3.2.1.jar" />				
				<include name="junit-4.8.2.jar" />
				<include name="validation-api-1.0.0.GA.jar" />			      
			</fileset>
			<fileset dir="${env.JAVA_HOME}/lib">
				<include name="tools.jar"/>
			</fileset>
		</path>
	</target>
	<!-- Compile the TraderManager classes -->
	<target name="compile" depends="initialise" description="Compile and package TWS source code.">
		<!-- create a temp build directory -->
		<delete dir="${build}" />
		<mkdir dir="${build}" />
		<delete dir="${dist}" />
		<mkdir dir="${dist}" />
		<!-- compile the source -->
		<javac srcdir="${srccore}" destdir="${build}" debug="on" deprecation="on" source="1.6" target="1.6" includeantruntime="false" >
			<compilerarg value="-Xlint:none"/>
			<classpath refid="build.classpath" />
		</javac>
		<javac srcdir="${srctrade}" destdir="${build}" debug="on" deprecation="on" source="1.6" target="1.6" includeantruntime="false" >
			<compilerarg value="-Xlint:none"/>
			<classpath refid="build.classpath" />
		</javac>
		<!-- make the jar -->
		<jar jarfile="${name}.jar" basedir="${build}" compress="true">
			<fileset dir="${config}">
				<include name="META-INF/application.xml" />
				<include name="META-INF/persistence.xml" />
			</fileset>
			<fileset dir="${srctrade}">
				<include name="**/*.gif" />
				<include name="**/*.ico" />
				<include name="**/*.xml" />
				<include name="**/*.sql" />
				<include name="**/*.html" />
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${srccore}">
				<include name="**/*.gif" />
				<include name="**/*.ico" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
		<!-- delete the temp directory -->
		<delete dir="${build}" />		
		<!-- With just specific files <zip destfile="${name}.zip" basedir="${base}"  /> 
	      <zip destfile="${name}.zip" basedir="${base}"  excludes="src/**, test/**, .classpath, .project, config.properties, *.log*" />	
		-->		 
		<zip destfile="${name}.zip" basedir="${base}" excludes="reports/**, .classpath, .project, config.properties, *.log*" /> 				
	</target>
	<target name="createTables" depends="initialise">
		<sql driver="${sql.driver}" url="${sql.url}" userid="${sql.user}" password="${sql.password}" >
			<classpath refid="build.classpath" />
			<transaction src="../db/TradeManagerDDL.sql"/>
		</sql>
	</target>
	<target name="createDB" depends="createUser" description="Creates the database and inserts default data">
		<sql driver="${sql.driver}" url="${sql.url}" userid="${sql.user}" password="${sql.password}" >
			<classpath refid="build.classpath" />
			<transaction src="../db/TradeManagerData.sql"/>
		</sql>
	</target>
	<target name="createUser" depends="createTables">
		<sql driver="${sql.driver}" url="${sql.url}" userid="${sql.user}" password="${sql.password}" delimiter="//" >
			<classpath refid="build.classpath" />
			<transaction src="../db/DropCreateUserProc.sql"/>
		</sql>
	</target>
	<target name="cleanDB" depends="initialise" description="Deletes all data in the database and sets up default data.">
		<sql driver="${sql.driver}" url="${sql.url}" userid="${sql.user}" password="${sql.password}" >
			<classpath refid="build.classpath" />
			<transaction src="../db/TradeManagerData.sql"/>
		</sql>
	</target>
	<target name="cleanTradeOrdersDB" depends="initialise" description="Clears the database of TradeOrders for testing.">
		<sql driver="${sql.driver}" url="${sql.url}" userid="${sql.user}" password="${sql.password}" >
			<classpath refid="build.classpath" />
			<transaction src="../db/ClearTradeOrdersData.sql"/>
		</sql>
	</target>
	<target name="all" depends="compile" description="Compiles and package in jar files all the Trade Manager related code.">
	</target>
</project>

